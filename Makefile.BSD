#
#	Makefile.BSD - input for BSD Pmake (for use in base OS or for packages)
#
# Define control variables on the command-line as necessary.
# (some attempt is made to sometimes auto-define them)
#
#	make -f Makefile.BSD __NetBSD__=1 __GNUC__=4 __GNULD__=2
#
#ident	"@(#)host:$Name:  $:$Id: Makefile.BSD,v 1.15 2011-08-17 02:25:03 -0800 woods Exp $"
#

.include <bsd.own.mk>

# is the build happening in the full NetBSD build environment?
#
# (These are all set in the environment by the
# ${TOOLDIR}/nbmake-${MACHINE} wrapper)
#
.if defined(MAKE) && defined(MACHINE) && defined(MACHINE_ARCH) && defined(TOOLDIR) && defined(USETOOLS)

__NetBSD__ = defined

.elif defined(NETBSDSRCDIR)

# hosted build on NetBSD
# (same as above for now)
#
__NetBSD__ = defined

.elif defined(.FreeBSD) && (${.FreeBSD} == "true")

__FreeBSD__ = defined

.elif defined(TEST_HOST_RES_SEND)

PREFIX ?= /usr/pkg
CPPFLAGS += -I${PREFIX}/bind/include -DHOST_RES_SEND
LDFLAGS += -L${PREFIX}/lib
LDADD += -lbind
__NetBSD__ = defined

.endif

.if !defined(__GNUC__)
__GNUC__ !=		echo __GNUC__ | $(CC) -E -c - | sed '/\#/d' | tr -d ' \012'
.endif
.if !defined(__GNUC_MINOR__)
__GNUC_MINOR__ !=	echo __GNUC_MINOR__ | $(CC) -E -c - | sed '/\#/d' | tr -d ' \012'
.endif
.if !defined(__GNUC_PATCHLEVEL__)
__GNUC_PATCHLEVEL__ !=	echo __GNUC_PATCHLEVEL__ | $(CC) -E -c - | sed '/\#/d' | tr -d ' \012'
.endif

# Silly Apple....
#
.if defined(.FreeBSD) && (${.FreeBSD} == "false")

__Darwin__ = defined

#
# NOTE: Mac OS X does not use GNU ld.
#
__GNULD__ = 0

NO_SHARED =	no
LDSTATIC =	# empty

OPTIM ?=	-O3
LDADD +=	-lresolv
CFLAGS =	${OPTIM} -pipe

# At some point Apple imported the BIND-9 nameserver to OS X
#
CFLAGS +=	-DBIND_8_COMPAT

.else

. if !defined(__GNULD__)
__GNULD__ !=		$(LD) -v | awk '{print int($$4);}' | tr -d ' \012'
. endif

.endif

.if defined(__FreeBSD__)
NO_SHARED = YES
.endif

.if ${__GNUC__} >= 1
CFLAGS +=	-pipe
.endif

.if ${__GNUC__} >= 4
CFLAGS +=	-fstack-protector-all
.endif

CPPFLAGS += -DDEBUG

PREFIX ?= /usr

LDSTATIC ?= -static
.if !defined(NO_SHARED)
NOSHARED ?= YES
.endif

BINDIR ?= ${PREFIX}/bin
BINOWN ?= root

.if defined(__NetBSD__)
MANDIR ?= ${PREFIX}/share/man
.elif defined(__FreeBSD__)
MANDIR ?= ${PREFIX}/share/man/man
.else
# 4.4BSD, including BSD/OS
MANDIR ?= ${PREFIX}/share/man/cat
.endif

PROG =	host

SRCS =	main.c info.c list.c addr.c geth.c util.c misc.c test.c \
	file.c send.c vers.c

HEADERS = port.h conf.h exit.h type.h rrec.h defs.h host.h glob.h

SCRIPT_SRCS = nscheck.sh nslookup.sh mxlookup.sh rblookup.sh
SCRIPTS = nscheck mxlookup rblookup
.if defined(FAKE_NSLOOKUP)
SCRIPTS += nslookup
.endif
CLEANFILES += ${SCRIPTS}

MANS =	host.1
DOCS =	RELEASE_NOTES ToDo
MISCS = malloc.c README_NT

ALL_FILES = Makefile Makefile.BSD ${DOCS} ${HDRS} ${SRCS} ${MANS} ${MISCS}

# Don't use "-Werror" on NetBSD
#
# on NetBSD/i386 some functions have prototypes declaring one or more
# of their parameters as "short int", but since it is impossible to
# pass a short in reality, we end up with warnings of the likes of
# "passing arg 1 of `__byte_swap_word_variable' with different width
# due to prototype".
#
# Some versions of GCC also get the "integer constant" signed/unsigned
# check completely wrong on some platforms (e.g. i386).
#
NOGCCERROR = 1
# for some older systems....
NO_WERROR = 1

# Take control of our own warning flags (WARNS=2 would be OK, but incomplete)
WARNS = 0

__GNUC__ ?= 1

.if ${__GNUC__} >= 1
# no, we're not that pedantic!
#CWARNFLAGS += -pedantic
#
CWARNFLAGS += -Wall
#
# these aren't always in "-Wall"
CWARNFLAGS += -Wimplicit
CWARNFLAGS += -Wreturn-type
CWARNFLAGS += -Wswitch
CWARNFLAGS += -Wcomment
#
# in addition to -Wall
#CWARNFLAGS += -Wtraditional
.if ${__GNUC__} <= 2
CWARNFLAGS += -W
.else
CWARNFLAGS += -Wextra
.endif
CWARNFLAGS += -Wcast-qual
# -Wid-clash-LEN is sadly no longer supported in 3.2.2 or 3.3.3
.if ${__GNUC__} <= 2
CWARNFLAGS += -Wid-clash-30
.endif
CWARNFLAGS += -Wpointer-arith
CWARNFLAGS += -Wshadow
#
# we're not quite ready for full const-ification yet...
#CWARNFLAGS += -Wwrite-strings
#
# this isn't mentioned in 1.42's manual but causes no error
CWARNFLAGS += -Wstrict-prototypes
.endif

.if ${__GNUC__} >= 2
CWARNFLAGS += -Waggregate-return
CWARNFLAGS += -Wcast-align
CWARNFLAGS += -Wchar-subscripts
CWARNFLAGS += -Wconversion
CWARNFLAGS += -Wmissing-declarations
CWARNFLAGS += -Wmissing-prototypes
CWARNFLAGS += -Wno-long-long
# the rest aren't in the manual, but work on at least 2.9x.x
CWARNFLAGS += -Wformat-extra-args
# -Wundef isn't in 2.7.2, but then again if you're still using 2.7.2
# you may be suffering from far more code generation bugs and other
# compiler problems than you might know!
CWARNFLAGS += -Wundef
# we do intentionally have a couple of large arrays
#CWARNFLAGS += -Wlarger-than-65536
CWARNFLAGS += -Wbad-function-cast
.endif

.if ${__GNUC__} >= 3
# Yuck:  this is broken in at least 3.2.2...
#CWARNFLAGS += -Wunreachable-code
CWARNFLAGS += -Wdeclaration-after-statement
.endif

.if !defined(__NetBSD__) && !defined(__FreeBSD__)
CFLAGS += ${CWARNFLAGS}
.endif

__GNULD__ ?= 1

.if ${__GNULD__} >= 1
. if !defined(__FreeBSD__)
LDFLAGS += -Wl,--warn-common
. endif
LDFLAGS += -Wl,--fatal-warnings
LDFLAGS += -Wl,--unresolved-symbols=report-all
LDFLAGS += -Wl,--error-unresolved-symbols
.endif

.SUFFIXES: .5so .5

.include <bsd.prog.mk>

# XXX maybe should create a temp file, only clobber target if temp is different
#
.sh:
	@rm -f $@
	sed -e 's,@CONFDIR@,${CONFDIR},g' < ${.CURDIR}/$@.sh > $@
	chmod +x $@

.if !target(clobber)
.PHONY: clobber
clobber: .NOTMAIN cleandir
.endif

BSDSRCDIR ?=	/usr/src

ALL_SOURCES =	${DOCS}				\
		${MANS}				\
		${SRCS}				\
		${HEADERS}			\
		${SCRIPT_SRCS}

SRCINSTDIR ?=	${BSDSRCDIR}/usr.bin/host

.PHONY: host2netbsd
host2netbsd: ${ALL_SOURCES} Makefile
	${INSTALL_DIR} ${SRCINSTDIR}
	cp Makefile.BSD ${SRCINSTDIR}/Makefile
	cp ${ALL_SOURCES} ${SRCINSTDIR}

.PHONY: show-vars
show-vars:
	@echo NETBSDSRCDIR=${NETBSDSRCDIR}
	@echo BSDSRCDIR=${BSDSRCDIR}
	@echo __NetBSD__=${__NetBSD__}
	@echo __FreeBSD__=${__FreeBSD__}
	@echo .FreeBSD=${.FreeBSD}
	@echo __Darwin__=${__Darwin__}
	@echo __GNUC__=${__GNUC__}
	@echo __GNUC_MINOR__=${__GNUC_MINOR__}
	@echo __GNUC_PATCHLEVEL__=${__GNUC_PATCHLEVEL__}
	@echo __GNULD__=${__GNULD__}
	@echo NOSHARED=${NOSHARED}
	@echo NO_SHARED=${NO_SHARED}
	@echo LDSTATIC=${LDSTATIC}
	@echo MAKE=${MAKE}
	@echo MACHINE=${MACHINE}
	@echo MACHINE_ARCH=${MACHINE_ARCH}
	@echo TOOLDIR=${TOOLDIR}
	@echo USETOOLS=${USETOOLS}

.PHONY: clean-cvs-parents
	rm *.~1.*.~
